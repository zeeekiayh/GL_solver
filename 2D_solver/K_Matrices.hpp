#ifndef kMatrices
#define kMatrices

#include "structures.hpp"

/* * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * This file simply holds all of the general K matrices
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */
// define a namespace to not get these mixed up with anything else
namespace kMatrix {
    int matSize = 9;
    int K1 = 1, K2 = 1, K3 = 1;
    int K123 = K1 + K2 + K3;

    // define all the K matrices
        Eigen::MatrixXi XX(matSize,matSize);
        Eigen::MatrixXi YY(matSize,matSize); // eq. (48)
        Eigen::MatrixXi ZZ(matSize,matSize);

        Eigen::MatrixXi XY(matSize,matSize);
        Eigen::MatrixXi YX(matSize,matSize); // eq. (49)
        
        Eigen::MatrixXi ZY(matSize,matSize);
        Eigen::MatrixXi YZ(matSize,matSize); // eq. (50)

        Eigen::MatrixXi ZX(matSize,matSize);
        Eigen::MatrixXi XZ(matSize,matSize); // eq. (51)


    // build all the K matrices
        // the easy ones
        for (int i = 0; i < matSize; i++) {
            XX(i,i) = (i == 0 || i == 3 || i == 6) ? K123 : K1;
            YY(i,i) = (i == 1 || i == 5 || i == 8) ? K123 : K1;
            ZZ(i,i) = (i == 2 || i == 4 || i == 7) ? K123 : K1;
        }

        // =====================================
        XY << 0,  0,  0,  0,  0, K2,  0,  0,  0,
            0,  0,  0,  0,  0,  0, K3,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0, K2,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            K3,  0,  0,  0,  0,  0,  0,  0,  0,
            0, K2,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0, K3,  0,  0,  0,  0,  0;

        // =====================================
        YX << 0,  0,  0,  0,  0, K3,  0,  0,  0,
            0,  0,  0,  0,  0,  0, K2,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0, K3,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            K2,  0,  0,  0,  0,  0,  0,  0,  0,
            0, K3,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0, K2,  0,  0,  0,  0,  0;

        // =====================================
        ZY << 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0, K3,  0,
            0,  0,  0,  0,  0,  0,  0,  0, K2,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0, K2,  0,  0,  0,
            0,  0,  0,  0, K3,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, K2,  0,  0,  0,  0,  0,  0,  0,
            0,  0, K3,  0,  0,  0,  0,  0,  0;

        // =====================================
        YZ << 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0, K2,  0,
            0,  0,  0,  0,  0,  0,  0,  0, K3,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0, K3,  0,  0,  0,
            0,  0,  0,  0, K2,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, K3,  0,  0,  0,  0,  0,  0,  0,
            0,  0, K2,  0,  0,  0,  0,  0,  0;

        // =====================================
        ZX << 0,  0,  0,  0, K2,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0, K3,  0,  0,  0,  0,  0,
            0,  0, K2,  0,  0,  0,  0,  0,  0,
            K3,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0, K2,  0,
            0,  0,  0,  0,  0,  0, K3,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0;

        // =====================================
        XZ << 0,  0,  0,  0, K3,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0, K2,  0,  0,  0,  0,  0,
            0,  0, K3,  0,  0,  0,  0,  0,  0,
            K2,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0, K3,  0,
            0,  0,  0,  0,  0,  0, K2,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0;
}

#endif